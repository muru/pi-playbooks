- name: disk info
  become: yes
  parted:
    device: "/dev/{{disk}}"
    unit: MiB
  register: disk_info

- name: unmount partitions
  become: yes
  shell: "if findmnt /dev/{{disk}}{{item.num}}; then umount /dev/{{disk}}{{item.num}}; fi"
  loop: "{{ disk_info.partitions }}"

- name: remove partitions
  become: yes
  parted:
    device: "/dev/{{disk}}"
    number: '{{ item.num }}'
    state: absent
  loop: '{{ disk_info.partitions }}'

- name: partition table
  become: yes
  parted:
    device: "/dev/{{disk}}"
    label: msdos

- name: make partition 1 (boot)
  become: yes
  parted:
    device: "/dev/{{disk}}"
    number: 1
    state: present
    part_start: "1MiB"
    part_end: "512MiB"
    part_type: primary
    flags:
      - lba

- name: make partition 2 (root)
  become: yes
  parted:
    device: "/dev/{{disk}}"
    number: 2
    state: present
    part_start: "513MiB"
    part_end: "100%"
    part_type: primary

- name: format partition 1 (boot)
  become: yes
  filesystem:
    dev: "/dev/{{disk}}1"
    fstype: vfat
    opts: -n boot -F 32

- name: format partition 2 (root)
  become: yes
  filesystem:
    dev: "/dev/{{disk}}2"
    fstype: ext4
    opts: -L arch

- name: directory for mounting
  become: yes
  tempfile:
    state: directory
    suffix: mnt
  register: mntdir

- name: temp fstab
  become: yes
  tempfile:
    state: file
    suffix: fstab
  register: fstab

- name: mount parition 2 (root)
  become: yes
  mount:
    path: "{{mntdir.path}}"
    src: "/dev/{{disk}}2"
    fstype: ext4
    state: mounted
    fstab: "{{fstab.path}}"

- name: boot dir
  become: yes
  file:
    path: "{{mntdir.path}}/boot"
    state: directory

- name: mount parition 1 (boot)
  become: yes
  mount:
    path: "{{mntdir.path}}/boot"
    src: "/dev/{{disk}}1"
    fstype: vfat
    state: mounted
    fstab: "{{fstab.path}}"

- name: get OS Archive
  when: os.bsdtar
  get_url:
    url: "{{ os.url }}"
    dest: "{{ os_dl_dir }}"
    checksum:  "{{ os.sum_url }}"
  register: os_dl

- name: extract OS archive with bsdtar
  become: yes
  when: os.bsdtar
  shell: "bsdtar -xpf {{ os_dl.dest | quote }} -C {{ mntdir.path | quote }}; ret=$?; sync; exit $ret"
  args:
    warn: false

- name: extract OS archive
  become: yes
  when: not os.bsdtar
  unarchive:
    src: "{{ os.url }}"
    dest: "{{ mntdir.path }}"
    remote_src: yes

- name: root ssh dir
  become: yes
  file:
    path: "{{mntdir.path}}/root/.ssh/"
    owner: root
    group: root
    state: directory
    mode: '0700'

- name: add authorized keys to root
  become: yes
  get_url:
    url: "{{ keys_url }}"
    dest: "{{mntdir.path}}/root/.ssh/authorized_keys"
    owner: root
    group: root
    mode: '0400'

- name: PATH in environment
  become: yes
  lineinfile:
    path: "{{mntdir.path}}/etc/environment"
    line: "PATH=/usr/local/sbin:/usr/local/bin:/usr/bin"

- name: passwd entry for user
  become: yes
  lineinfile:
    path: "{{mntdir.path}}/etc/passwd"
    regexp: '^{{os.default_user}}'
    line: "{{user.name}}:x:1000:1000:{{user.gecos}}:{{user.home}}:{{user.shell}}"

- name: shadow entry for user
  become: yes
  lineinfile:
    path: "{{mntdir.path}}/etc/shadow"
    regexp: '^{{os.default_user}}'
    line: "{{user.name}}:{{password | password_hash('sha512', 65534 | random(seed=inventory_hostname) | string)}}::0:99999:7:::"

- name: groups for user
  become: yes
  replace:
    path: "{{mntdir.path}}/etc/group"
    regexp: "{{os.default_user}}"
    replace: "{{user.name}}"

- name: home + ssh directory for user
  become: yes
  file:
    path: "{{mntdir.path}}{{user.home}}"
    state: directory
    owner: '1000'
    group: '1000'

- name: user authorized_keys
  become: yes
  authorized_key:
    user: "{{user.name}}"
    path: "{{mntdir.path}}{{user.home}}/.ssh/authorized_keys"
    key: "{{ user.keys_url }}"

- name: umount parition 1 (boot)
  become: yes
  mount:
    path: "{{mntdir.path}}/boot"
    src: "/dev/{{disk}}1"
    state: unmounted
    fstab: "{{fstab.path}}"

- name: umount parition 2 (root)
  become: yes
  mount:
    path: "{{mntdir.path}}"
    src: "/dev/{{disk}}2"
    state: absent
    fstab: "{{fstab.path}}"

- name: cleanup temps
  become: yes
  file:
    path: "{{item.path}}"
    state: absent
  loop:
    - "{{fstab}}"
    - "{{mntdir}}"
